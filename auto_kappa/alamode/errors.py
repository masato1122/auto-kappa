# -*- coding: utf-8 -*-
#
# errors.py
#
# Treat unexpected errors for ALAMODE
#
# Copyright (c) 2024 Masato Ohnishi
#
# This file is distributed under the terms of the MIT license.
# Please see the file 'LICENCE.txt' in the root directory
# or http://opensource.org/licenses/mit-license.php for information.
#
import os
import sys
import shutil
import glob
import logging

from auto_kappa import output_directories

logger = logging.getLogger(__name__)

def _print_error_message(filename, error_msg):
    """ """
    msg = "\n Error found in %s :" % filename
    msg += error_msg
    logger.error(msg)

def check_unexpected_errors(logfile, dir_base=None):
    """ """
    dir_box = "./box"
    if os.path.exists(logfile) == False:
        return None
    
    ### error messages
    result_err = "KPOINT information is not consistent".lower()
    version_err = "FCSXML files generated by older versions".lower()
    
    ### check each line
    lines = open(logfile, 'r').readlines()
    for line_tmp in lines:

        line = line_tmp.lower()

        ### Error in .result file
        if result_err in line:
            
            _print_error_message(logfile, line)
            
            if logfile == "kappa.log":
                _error_in_alamode_result()
            else:
                msg = "\n Error in %s" % logfile
                logger.error(msg)
                sys.eixt()
        
        ### Version error
        if version_err in line:
            
            _print_error_message(logfile, line)
            
            if logfile in ["cv.log", "lasso.log"]:
                _remove_harmonic_fcs(dir_base)
            else:
                msg = "\n Error in %s" % logfile
                logger.error(msg)
                sys.eixt()


def _remove_harmonic_fcs(dir_base):
    """ """
    dir_box = "./box"
    dir_init = os.getcwd()
    
    ### FC2
    dir_fc2 = dir_base + "/" + output_directories["harm"]["force"]
    if os.path.exists(dir_fc2) == False:
        msg = "\n Error : cannot find %s" % dir_fc2.replace(dir_base, ".")
        logger.error(msg)
        sys.exit()
    
    os.chdir(dir_fc2)
    os.makedirs(dir_box, exist_ok=True)
    for fns in (
            glob.glob("fc2.*"),
            glob.glob("*.fcs"),
            glob.glob("*.xml")):
        for ff in fns:
            shutil.move(ff, dir_box+"/"+ff)
    os.chdir(dir_init)
    
    ### Band and DOS
    dir_bandos = dir_base + "/" + output_directories["harm"]["bandos"]
    if os.path.exists(dir_bandos) == False:
        return 0
    else:
        msg = "\n Remove %s" % dir_bandos.replace(dir_base, ".")
        shutil.rmtree(dir_bandos)
    
    return 1

def _error_in_alamode_result():
    """ Error in .result file for the previous calculation """
    dir_box = "box"
    os.makedirs(dir_box, exist_ok=True)
    for ff in glob.glob("*"):
        if ff in ["BORNINFO", "kappa.in"] or dir_box in ff:
            continue
        else:
            shutil.move(ff, dir_box+"/"+ff)
    return 1

