# -*- coding: utf-8 -*-
#
# dos.py
#
# This file creates Dos class reading .dos file generated by Alamode.
#
# Copyright (c) 2022 Masato Ohnishi
#
# This file is distributed under the terms of the MIT license.
# Please see the file 'LICENCE.txt' in the root directory
# or http://opensource.org/licenses/mit-license.php for information.
#
import numpy as np

class Dos():
    def __init__(self, filename=None):
        """
        Variables
        ----------
        nfreq : integer
            # of frequency points
        frequencies : array, float, shape=(nfreq)
            frequencies
        dos : array, float, shape=(nfreq)
            total DOS
        dos_atom : ndarray, float, shape=(nfreq, nat)
            Atom projected DOS
        elements : array, string, shape=(nel)
            elements
        nat_el : array, integer, shape=(nel)
            # of atoms for each element
        """
        self.nfreq = None
        self.freqencies = None
        self.dos = None
        self.dos_atom = None
        self.elements = None
        self.nat_el = None
        if filename is not None:
            self.read_dfile(filename)
    
    def set_elements(self, dfile):
        self.elements, self.nat_el = get_elements(dfile)
        self.nat = 0
        for i in range(len(self.nat_el)):
            self.nat += self.nat_el[i]
    
    def set_nfreq(self, dfile):
        self.nfreq = get_nfreq(dfile)

    def set_dos(self, dfile):
        self.frequencies, self.dos, self.dos_atom = (
                get_dos(dfile, self.nfreq, self.nat))

    def read_dfile(self, dfile):
        self.set_elements(dfile)
        self.set_nfreq(dfile)
        self.set_dos(dfile)

def get_elements(dfile):
    """Read elements in a primitive cell
    Parameter
    --------------
    dfile : string
        DOS file name
    
    Return
    ---------
    elements : array, string, shape=(nels)
        elements (H, He, Li, ..., etc)
    nat_el : array, integer, shape=(nels)
        # of each element
    nels : integer
        # of kinds of element
    """
    ifs = open(dfile,"r")
    line = ifs.readline(); data1 = line.split()
    line = ifs.readline(); data2 = line.split()
    elements = []
    nat_el = []
    for i in range(len(data1)-1):
        elements.append(data1[i+1])
        nat_el.append(int(data2[i+1]))
    return elements, nat_el

def get_nfreq(dfile):
    """Get number of frequencies
    Parameter
    -----------
    dfile : string
        DOS file name
    
    Return
    -----------
    nline : integer
        # of frequencies
    """
    nline = sum(1 for line in open(dfile)) - 3
    return nline

def get_dos(dfile, nfreq, nat):
    """Read DOS file
    Parameters
    -------------
    nfreq : integer
        # of frequencies
    nat : integer
        # of atoms in a primitive cell

    Return
    ---------
    dos_total : array, float, shape=(nfreq)
        Total DOS
    dos_atom : ndarray, float, shape=(nfreq, nat)
        Atom projected DOS
    """
    frequencies = np.zeros(nfreq)
    dos_total = np.zeros(nfreq)
    dos_atom = np.zeros((nfreq, nat))
    ifs = open(dfile, "r")
    nline = sum(1 for line in open(dfile))
    dall = []; count = 0
    for il in range(nline):
        line = ifs.readline()
        data = line.split()
        if len(data) == 0:
            continue
        if line[0] == "#":
            continue
        frequencies[count] = float(data[0])
        dos_total[count] = float(data[1])

        if len(data) > 2:
            for ia in range(nat):
                dos_atom[count,ia] = float(data[2+ia])
        count += 1
    ifs.close()
    return frequencies, dos_total, dos_atom 

