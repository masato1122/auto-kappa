==============
Installation
==============

Requirements
=============

Auto-kappa requires the following packages. 
While the python packages can be automatically downloaded during the installation process,
users need to separately install VASP and ALAMODE. Please use the latest verison for VASP and ALAMODE.

* VASP (latest: ver.6.3.2)
* alamode (alm, anphon, ALM, latest: ver.1.4.2)
* eigen (< 3.4)
* phonopy
* custodian 
* pymatgen
* ase
* spglib
* seekpath


Preparation
============

VASP and Alamode
-------------------

Auto-kappa needs ``vasp``, ``alm``, and ``anphon`` commands.
Please install VASP and 
`ALAMODE <https://alamode.readthedocs.io/en/latest/index.html>`_
in advance.

* To allow ASE call POTCAR files of VASP,
  set ``VASP_PP_PATH`` variable in your shell configuration file, 
  which may be ``~/.bash_profile``. 
  See the `ASE page <https://wiki.fysik.dtu.dk/ase/ase/calculators/vasp.html>`_ for detail.

.. code-block:: bash
    
    export VASP_PP_PATH=$HOME/(directory in which potpaw_PBE is located)
    
``potpaw_PBE.54.tar.gz`` supposed to be expanded in ``potpaw_PBE``.


.. note::

    The latest version of Eigen (3.4) may not be compatible with Alamode 1.4.2.
    Eigen 3.3.* may need to be used.


.. .. warning::
.. 
..     There is an error when ASE calls the PAW potential of W. 
..     Although ASE calls W_pv (see ase.calculators.vasp.setups) ase the recommended potential,
..     it is replaced by W_sv in ver.5.4. 
..     We will solve this issue, otherwise you need to modify the setups.py.


Phonondb
---------

* If you would like to use parameters in Phonondb, download the data from `HERE <https://github.com/atztogo/phonondb/tree/main>`_.

* The automation calculation initializes based on Phonondb parameters using ``--directory`` option.


Installation of auto-kappa
============================

1. You can download auto-kappa with git command.

.. code-block:: bash
    
    $ git clone git@github.com:masato1122/auto-kappa.git

or

.. code-block:: bash

    $ git clone -b develop git@github.com:masato1122/auto-kappa.git


.. If you cannot download. Please add the following contents in ~/.ssh/config.
.. If you newly create the config file, you also need to modify the permission.

.. .. code-block:: bash
    
..     Host github.com
..         HostName ssh.github.com
..         Port 443
..         IdentityFile ~/.ssh/id_rsa  # If you changed the directory, modify this part.
..         User git

..     Host ssh.github.com
..         Port 443
..         IdentityFile ~/.ssh/id_rsa  # Same as the above
..         User git
    

.. You can change the permission with ``chmod``.

.. .. code-block:: bash
    
..     $ chmod 600 ~/.ssh/config

After downloading the code, update and install it:

.. code-block:: bash

    $ cd (directory of auto-kappa)
    $ git pull
    $ sh ./install.sh


3. Create a virtual environment, ``kappa``, with conda.

.. code-block:: bash

    $ conda create -n kappa python==3.9
    $ conda init
    $ exit (You once need to logout and login to the server.)
    
    
    Login the server again and confirm the virtual environment was created.
    $ conda env list
    ...
    kappa       /home/***/***/envs/kappa
    ...
    
    
    Activate the virtual environment.
    $ conda activate kappa


To set ``kappa`` as the default, add the following line in ``.bash_profile``.

.. code-block:: bash

    source activate kappa


4. Continue to install auto-kappa.

.. code-block:: bash
    
    $ cd (arbitrary directory)/auto-kappa
    $ git config pull.rebase false
    $ git pull     ## update the package
    $ sh install.sh
     
    Check if auto_kappa is installed or not.
    $ python
    >>> import auto_kappa
    >>> exit()
    
    $ akrun -h


Examples
=========

1. Test for VASP and ALAMODE

Test jobs can be found in ``auto-kappa/examples``.
Please read ``README`` in that directory.
You can finde ``1_alm``, ``2_anphon``, etc., which are test jobs for
``alamode`` (``alm`` and ``anphon``), ``ASE``, ``custodian``, and ``auto-kappa``.
It is recommended to run these jobs before starting a massive calculation.


2. ``database`` example

The calculation in ``database`` calculates thermal conductivity of Silicon automatically.
Because every process is included in this job, it takes one or two hours.
It is recommended to use a job scheduler to submit this job.
An example of job script is shown below. Please modify depending on your environment.

.. code-block:: shell
    
    #!/bin/sh
    #PBS -q default         ## name of queue that you can check with a command like "qstat -q".
    #PBS -l nodes=1:ppn=24  ## only nodes=1 is available
    #PBS -j oe
    #PBS -N test            ## job name
    
    export LANG=C
    export OMP_NUM_THREADS=1  ## Please set OMP_NUM_THREADS=1
    cd $PBS_O_WORKDIR
    
    ncores=24               ## ncores must be smaller than ppn, which is set above.
    
    mpid=mp-149             ## Si
    dir_db=${directory_of_downloaded_phoonondb}/${mpid}  ## This line must be modified.
    
    if [ ! -e $dir_db ]; then
        echo " Cannot find $dir_db"    
        exit
    fi
    
    akrun \
        --directory $dir_db \
        --material_name $mpid \
        --ncores $ncores

.. _sec-automation:

Automation Calculation
=======================

Scripts in ``examples/phonondb`` and ``examples/massive`` may be useful to run the automation calculation.
First, data of Phonondb need to be downloaded

1. Download data from Phonondb

.. code-block:: shell
    
    $ cd (arbitrary directory in which Phonondb will be downloaded.)
    $ cp .../examples/phonondb/* ./
    
    ## modify "imin" and "imax" in get_phonondb.sh
    $ vi get_phonondb.sh
    $ sh get_phonondb.sh


2. Start the calculation

.. code-block:: shell
    
    $ dir="APDB_0-10000"
    $ mkdir $dir
    $ cd $dir
    $ cp .../auto-kappa/examples/massive/run_massive.sh ./
    ## modify the script and submit jobs


Known Bugs
==========

POTCAR file
------------

* You may get warning like below. While these messages will be removed, you can ignore them which do not affect the 
  calculation. These messages are shown because POTCAR files are generated by ASE, which addes a few information in the POTCAR 
  file, and these files are read by Pymatgen, which consideres that the additional information may be error.

.. code-block:: shell

    .../lib/python3.8/site-packages/pymatgen/io/vasp/inputs.py:1738: UserWarning: Ignoring unknown variable type SHA256 
    warnings.warn(f"Ignoring unknown variable type {key}")
    .../lib/python3.8/site-packages/pymatgen/io/vasp/inputs.py:1738: UserWarning: Ignoring unknown variable type COPYR
    warnings.warn(f"Ignoring unknown variable type {key}")



.. Installation of python libraries
.. ---------------------------------
.. 
.. .. code-block:: bash
.. 
..     $ conda create -n alm python=3.8
..     $ conda activate alm
..     $ pip install pymatgen 
..     $ conda install -c conda-forge phonopy
..     $ pip install ase
..     $ pip install seekpath
..     $ pip install custodian
..     $ conda install -c conda-forge eigen
..     $ conda install -c conda-forge gcc
..     $ pip install xmltodict
..     $ pip install f90nml
..     $
..     $ conda install -c conda-forge mkl
..     $
..     $ export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${CONDA_PREFIX}/lib
.. 
.. 
.. Installation of Eigen
.. ^^^^^^^^^^^^^^^^^^^^^^^
.. 
.. .. code-block:: bash
..     
..     $ cd .../eigen-3.4.0
..     $ mkdir build
..     $ cd ./build
..     $ cmake3 ..
..     $ cmake3 . -DCMAKE_INSTALL_PREFIX=/home/*****/usr/local
..     $ make install
.. 
.. * Check /home/*****/usr/local/include/eigen3


.. Setting for POTCAR with ASE
.. -----------------------------
.. 
.. Add the following line. In the directory, potpaw_PBE exists.
.. See the following pages for details:
.. `1 (ASE) <https://wiki.fysik.dtu.dk/ase/ase/calculators/vasp.html>`_ and
.. `2 (pymatgen <https://pymatgen.org/installation.html#potcar-setup>`_.
.. 
.. .. code-block:: bash
..     
..     $ cat ~/.bash_profile
..     
..     ...
..     export VASP_PP_PATH=(directory in which potpaw_PBE is located.)
..     ...
.. 
.. .. code-block:: bash
..     
..     $ cat .pmgrc.yaml
..     
..     ...
..     PMG_VASP_PSP_DIR: (directory in which potpaw_PBE is located.)
..     PMG_MAPI_KEY: **********
..     ...

.. Installation of ALM
.. ----------------------
.. 
.. .. code-block:: bash
..     
..     $ source activate alm
..     $ git clone https://github.com/ttadano/ALM.git
..     $ cd ./ALM
..     $ git pull
..     $ cd ./python
..     $ python setup.py install
.. 
.. .. For Grand-Chariot, the following line may need to be added in setup.py.
.. .. 
.. .. .. code-block:: bash
.. .. 
.. ..     os.environ["CC"] = /usr/bin/gcc
.. 
